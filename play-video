#!/usr/bin/python3
 
import sys
import subprocess
import re
 
to_width=64
to_height=64

if len(sys.argv) < 2:
  print(f"usage: {sys.argv[0]} VIDEO_FILE ...", file=sys.stderr)
  sys.exit(1)
 
for video_file in sys.argv[1:]:
 
  cmd = [ 'ffprobe', '-v', 'error', '-select_streams', 'v:0', 
    '-show_entries', 'stream=width,height,r_frame_rate',
    '-of', 'csv=p=0', video_file ]
 
  try:
    info = subprocess.check_output(cmd, universal_newlines=True).strip()
    width, height, fps_fraction = info.split(',')
    width = int(width)
    height = int(height)
 
    # Convert fps fraction (e.g. "24000/1001") to decimal
    if '/' in fps_fraction:
      num, den = map(int, fps_fraction.split('/'))
      fps = num / den
    else:
      fps = float(fps_fraction)
    
  except subprocess.CalledProcessError as e:
    print(f"{sys.argv[0]}: failed to get video info: {e}", file=sys.stderr)
    sys.exit(1)
 
  print(f"{video_file}: {width}x{height} @ {fps:.1f} fps")
 
  delay = 1000 // fps
 
  x_scale = width / to_width
  y_scale = height / to_height
  scale = min(x_scale, y_scale)
  x_size = int(to_width * scale)
  y_size = int(to_height * scale)
  x_offset = (width - x_size) // 2
  y_offset = (height - y_size) // 2
 
  cmd = [ 'ffmpeg', '-i', video_file,
    '-vf', f'crop={x_size}:{y_size}:{x_offset}:{y_offset},scale={to_width}:{to_height}',
    '-f', 'image2pipe', '-vcodec', 'ppm', '-', '|', 'sudo', './ppms2matrix', str(delay) ]

  print(repr(cmd))
 
  try:
    process = subprocess.run(' '.join(cmd), shell=True)
    if process.returncode != 0:
      print(f"{sys.argv[0]}: ffmpeg command failed with return code {process.returncode}", file=sys.stderr)
      sys.exit(1)
  except subprocess.CalledProcessError as e:
    print(f"{sys.argv[0]}: failed to run ffmpeg command: {e}", file=sys.stderr) 
    sys.exit(1)

